---
// Sección: Ejemplos de soluciones IA en acción
---

<section id="ejemplos-ia" class="examples-ia-section">
  <!-- Canvas de partículas flotantes -->
  <canvas id="examples-particles-canvas" class="particles-canvas"></canvas>
  
  <!-- Fondo con gradiente -->
  <div class="examples__background">
    <div class="gradient-orb gradient-orb--1"></div>
    <div class="gradient-orb gradient-orb--2"></div>
  </div>

  <div class="container">
    <div class="examples-content-wrapper">
      <!-- Lado izquierdo: Lista animada de ejemplos -->
      <div class="examples-list-container">
        <div class="animated-list-wrapper">
          <!-- Aquí se renderizará la lista animada -->
          <div id="ia-examples-list" class="animated-list">
            <!-- Los elementos se añadirán dinámicamente -->
          </div>
        </div>
      </div>

      <!-- Lado derecho: Título y descripción -->
      <div class="examples-text-content">
        <h2 class="examples-title">
          Pon a trabajar la IA <br/>
          <span class="gradient-text">en tu empresa</span>
        </h2>
        
        <p class="examples-description">
          Mientras lees esto, miles de empresas están ahorrando tiempo y dinero con IA. 
          Sus sistemas trabajan 24/7 procesando facturas, atendiendo clientes, generando 
          informes y tomando decisiones inteligentes. No es ciencia ficción, es lo que 
          está pasando ahora mismo en empresas como la tuya.
        </p>

        <p class="examples-subdescription">
          Cada notificación que ves representa una tarea real que la IA puede hacer por ti: 
          desde automatizar procesos repetitivos hasta crear experiencias personalizadas 
          para tus clientes. La pregunta no es si tu competencia ya lo está usando, 
          sino cuánto tiempo más vas a esperar para empezar.
        </p>

        <div class="examples-stats">
          <div class="stat-mini">
            <span class="stat-value">24/7</span>
            <span class="stat-label">Sin descansos</span>
          </div>
          <div class="stat-mini">
            <span class="stat-value">-80%</span>
            <span class="stat-label">Menos errores</span>
          </div>
          <div class="stat-mini">
            <span class="stat-value">10x</span>
            <span class="stat-label">Más rápido</span>
          </div>
        </div>

        <a href="#contacto" class="examples-cta">
          <span>Empieza a automatizar hoy</span>
          <svg class="cta-arrow" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </a>
      </div>
    </div>
  </div>
</section>

<style>
  .examples-ia-section {
    position: relative;
    background: #000000;
    padding: 6rem 0;
    overflow: hidden;
    border: none;
    box-shadow: none;
    min-height: 100vh;
    display: flex;
    align-items: center;
    scroll-snap-align: start;
  }

  /* Canvas de partículas */
  .particles-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0.3;
  }

  /* Fondo con gradientes */
  .examples__background {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(100px);
    opacity: 0.2;
    will-change: transform;
  }

  .gradient-orb--1 {
    width: 500px;
    height: 500px;
    background: radial-gradient(circle, #251863 0%, transparent 70%);
    top: 20%;
    left: -100px;
    animation: float-slow 15s ease-in-out infinite;
  }

  .gradient-orb--2 {
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, #02aa6d 0%, transparent 70%);
    bottom: 20%;
    right: -100px;
    animation: float-slow 20s ease-in-out infinite reverse;
  }

  .container {
    position: relative;
    z-index: 10;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .examples-content-wrapper {
    display: grid;
    grid-template-columns: 1fr 1.5fr;  /* Invertido para que el texto ocupe más */
    gap: 4rem;
    align-items: center;
  }

  /* Contenido de texto */
  .examples-text-content {
    max-width: 700px;
    padding-right: 2rem;  /* Cambio a padding-right porque ahora está a la derecha */
  }

  .examples-title {
    font-family: 'Inter', -apple-system, sans-serif;
    font-size: clamp(2.5rem, 4vw, 3.5rem);
    font-weight: 800;
    line-height: 1.1;
    color: #ffffff;
    margin-bottom: 2rem;
    letter-spacing: -0.02em;
  }

  .gradient-text {
    background: linear-gradient(135deg, #02aa6d 0%, #00ff94 50%, #251863 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: brightness(1.2);
  }

  .examples-description {
    font-size: 1.125rem;
    color: #e5e5e5;
    line-height: 1.7;
    margin-bottom: 1.5rem;
  }

  .examples-subdescription {
    font-size: 1rem;
    color: #9ca3af;
    line-height: 1.6;
    margin-bottom: 2rem;
  }

  /* Mini estadísticas */
  .examples-stats {
    display: flex;
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .stat-mini {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .stat-value {
    font-size: 1.5rem;
    font-weight: 700;
    color: #02aa6d;
  }

  .stat-label {
    font-size: 0.875rem;
    color: #6b7280;
  }

  /* Botón CTA */
  .examples-cta {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.875rem 1.75rem;
    background: linear-gradient(135deg, #02aa6d 0%, #251863 100%);
    color: #ffffff;
    font-weight: 500;
    border-radius: 12px;
    text-decoration: none;
    transition: all 300ms ease;
    position: relative;
    overflow: hidden;
    white-space: nowrap;
  }

  .examples-cta::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, #251863 0%, #02aa6d 100%);
    opacity: 0;
    transition: opacity 300ms ease;
  }

  .examples-cta:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px -10px rgba(2, 170, 109, 0.5);
  }

  .examples-cta:hover::before {
    opacity: 1;
  }

  .examples-cta span,
  .examples-cta svg {
    position: relative;
    z-index: 1;
  }

  .cta-arrow {
    width: 20px;
    height: 20px;
    transition: transform 300ms ease;
  }

  .examples-cta:hover .cta-arrow {
    transform: translateX(4px);
  }

  /* Contenedor con efecto de glass morphism sutil */
  .examples-list-container {
    position: relative;
    height: 520px;
    overflow: hidden;
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    padding: 20px;
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    box-shadow: 
      inset 0 1px 0 0 rgba(255, 255, 255, 0.05),
      0 20px 40px -20px rgba(0, 0, 0, 0.8);
  }

  .animated-list-wrapper {
    position: relative;
    height: 100%;
  }

  .animated-list {
    display: flex;
    flex-direction: column;
    gap: 12px;  /* Espacio entre tarjetas */
    height: 100%;
    overflow: hidden;
    position: relative;
    padding: 0;
  }

  /* Gradiente para fade out en la parte inferior */
  .examples-list-container::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 80px;
    background: linear-gradient(to top, #000000 0%, transparent 100%);
    pointer-events: none;
    z-index: 20;
  }

  /* Tarjeta de notificación - FONDO BLANCO + ANIMACIONES MAGIC UI */
  .notification-card {
    /* Fondo blanco y borde */
    background: #ffffff;
    border: 2px solid #ffffff;
    outline: 1px solid rgba(229, 231, 235, 0.5);
    border-radius: 12px;
    
    /* Espaciado */
    padding: 12px 16px;
    margin-bottom: 12px;
    
    /* Layout */
    display: flex;
    align-items: center;
    gap: 12px;
    
    /* Sombra suave */
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    
    /* Estado inicial para animación */
    opacity: 0;
    transform: translateY(40px) scale(0.9);
    
    /* Transiciones suaves */
    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }

  /* Animación de entrada estilo Magic UI */
  .notification-card.animate-in {
    animation: magicSlideIn 600ms cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  /* Animación de salida */
  .notification-card.animate-out {
    animation: magicSlideOut 400ms cubic-bezier(0.4, 0, 1, 1) forwards;
  }

  @keyframes magicSlideIn {
    0% {
      opacity: 0;
      transform: translateY(40px) scale(0.9);
    }
    60% {
      opacity: 1;
      transform: translateY(-5px) scale(1.02);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes magicSlideOut {
    0% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    100% {
      opacity: 0;
      transform: translateY(-20px) scale(0.9);
    }
  }

  /* Efecto hover mejorado */
  .notification-card:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12), 0 4px 8px rgba(0, 0, 0, 0.24);
    border-color: #ffffff;
    outline-color: rgba(16, 185, 129, 0.2);
  }

  /* Efecto de brillo al hover */
  .notification-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.4),
      transparent
    );
    transition: left 0.5s;
  }

  .notification-card:hover::before {
    left: 100%;
  }

  .notification-header {
    display: flex;
    align-items: center;
    gap: 12px;
    width: 100%;
  }

  .notification-icon {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    background: #10b981;
    color: #ffffff;
    border-radius: 8px;
  }
  
  .notification-icon svg {
    width: 18px;
    height: 18px;
    stroke-width: 3;
  }

  .notification-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 2px;
  }

  .notification-title {
    font-size: 0.9rem;
    font-weight: 600;
    color: #000000 !important;  /* Negro para máximo contraste */
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .notification-time {
    font-size: 0.75rem;
    color: #6b7280 !important;  /* Gris medio */
    font-weight: 400;
    margin-left: auto;  /* Empujar al final */
  }

  .notification-description {
    font-size: 0.8rem;
    color: #374151 !important;  /* Gris oscuro para buena legibilidad */
    line-height: 1.4;
    margin: 0.25rem 0 0 0;
  }

  /* Quitar delays estáticos - se añadirán dinámicamente */

  /* Efecto de pulso en el icono */
  @keyframes iconPulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  .notification-card:hover .notification-icon {
    animation: iconPulse 600ms ease-in-out;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .examples-content-wrapper {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .examples-text-content {
      padding-left: 0;
      order: 1;
    }

    .examples-list-container {
      max-width: 600px;
      margin: 0 auto;
      order: 2;
    }
  }

  @media (max-width: 768px) {
    .examples-ia-section {
      padding: 3rem 0;
    }

    .container {
      padding: 0 1rem;
    }

    .examples-title {
      font-size: 2rem;
    }

    .examples-description {
      font-size: 1rem;
    }

    .examples-stats {
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .examples-cta {
      padding: 0.75rem 1.5rem;
      font-size: 0.95rem;
    }

    .examples-list-container {
      height: 420px;
      padding: 1.25rem;
    }

    .notification-card {
      padding: 1rem 1.25rem;
    }

    .gradient-orb--1,
    .gradient-orb--2 {
      width: 300px;
      height: 300px;
    }
  }

  @media (max-width: 480px) {
    .examples-ia-section {
      padding: 2rem 0;
    }

    .examples-title {
      font-size: 1.75rem;
    }

    .examples-text-content {
      text-align: center;
    }

    .examples-stats {
      justify-content: center;
    }

    .examples-cta {
      display: flex;
      width: 100%;
      justify-content: center;
      white-space: normal;
      text-align: center;
    }

    .examples-subdescription {
      font-size: 0.9rem;
    }

    .stat-value {
      font-size: 1.25rem;
    }

    .stat-label {
      font-size: 0.75rem;
    }

    .notification-icon {
      width: 36px;
      height: 36px;
      font-size: 1.125rem;
    }

    .notification-title {
      font-size: 0.825rem;
    }

    .notification-description {
      font-size: 0.75rem;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Datos de ejemplo para las notificaciones
  const iaExamples = [
    // Automatizaciones
    {
      title: 'Factura procesada',
      description: 'Sistema automático de procesamiento OCR',
      time: 'hace 2s',
      color: '#3B82F6',
      type: 'automation'
    },
    {
      title: 'Email categorizado',
      description: 'IA clasifica correos automáticamente',
      time: 'hace 5s',
      color: '#F59E0B',
      type: 'automation'
    },
    {
      title: 'Informe generado',
      description: 'Dashboard KPI actualizado en tiempo real',
      time: 'hace 8s',
      color: '#10B981',
      type: 'automation'
    },
    {
      title: 'Contrato revisado',
      description: 'Análisis legal automático completado',
      time: 'hace 10s',
      color: '#EF4444',
      type: 'automation'
    },
    {
      title: 'Datos sincronizados',
      description: 'CRM actualizado con nuevos leads',
      time: 'hace 12s',
      color: '#3B82F6',
      type: 'automation'
    },
    
    // Agentes IA
    {
      title: 'Cliente atendido',
      description: 'Chatbot resolvió consulta técnica',
      time: 'hace 15s',
      color: '#F59E0B',
      type: 'agent'
    },
    {
      title: 'Lead cualificado',
      description: 'IA identificó oportunidad caliente',
      time: 'hace 18s',
      color: '#EF4444',
      type: 'agent'
    },
    {
      title: 'Cita agendada',
      description: 'Asistente virtual coordinó reunión',
      time: 'hace 20s',
      color: '#3B82F6',
      type: 'agent'
    },
    {
      title: 'Venta completada',
      description: 'Bot cerró transacción B2B',
      time: 'hace 22s',
      color: '#8B5CF6',
      type: 'agent'
    },
    {
      title: 'Llamada analizada',
      description: 'IA transcribió y resumió reunión',
      time: 'hace 25s',
      color: '#EC4899',
      type: 'agent'
    },
    
    // MicroSaaS
    {
      title: 'Pedido procesado',
      description: 'E-commerce automatizado 24/7',
      time: 'hace 28s',
      color: '#10B981',
      type: 'microsaas'
    },
    {
      title: 'SEO optimizado',
      description: 'IA mejoró ranking en Google',
      time: 'hace 30s',
      color: '#EC4899',
      type: 'microsaas'
    },
    {
      title: 'Stock actualizado',
      description: 'Inventario sincronizado en la nube',
      time: 'hace 32s',
      color: '#F59E0B',
      type: 'microsaas'
    },
    {
      title: 'Métrica analizada',
      description: 'KPIs procesados automáticamente',
      time: 'hace 35s',
      color: '#10B981',
      type: 'microsaas'
    },
    {
      title: 'Pago procesado',
      description: 'Transacción segura completada',
      time: 'hace 38s',
      color: '#3B82F6',
      type: 'microsaas'
    }
  ];

  // Función para crear una tarjeta de notificación
  function createNotificationCard(example, index) {
    const card = document.createElement('div');
    card.className = 'notification-card';
    
    card.innerHTML = `
      <div class="notification-header">
        <div class="notification-icon">
          <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div class="notification-content">
          <div class="notification-title">
            ${example.title}
            <span class="notification-time">${example.time}</span>
          </div>
          <div class="notification-description">${example.description}</div>
        </div>
      </div>
    `;

    // Añadir clase de animación después de un pequeño delay
    setTimeout(() => {
      card.classList.add('animate-in');
    }, index * 80);

    return card;
  }

  // Contenedor de la lista
  const listContainer = document.getElementById('ia-examples-list');
  if (!listContainer) return;

  // Array para mantener las notificaciones actuales
  let currentNotifications = [];
  let notificationIndex = 0;
  const maxVisibleNotifications = 5;  // Máximo 5 tarjetas visibles

  // Función para añadir una nueva notificación con animación Magic UI
  function addNotification() {
    const example = iaExamples[notificationIndex % iaExamples.length];
    const card = createNotificationCard(example, 0);
    
    // Añadir al principio con animación
    currentNotifications.unshift(card);
    listContainer.insertBefore(card, listContainer.firstChild);
    
    // Activar animación de entrada inmediatamente
    requestAnimationFrame(() => {
      card.classList.add('animate-in');
    });

    // Limitar el número de notificaciones visibles
    if (currentNotifications.length > maxVisibleNotifications) {
      const oldCard = currentNotifications.pop();
      
      // Animación de salida
      oldCard.classList.remove('animate-in');
      oldCard.classList.add('animate-out');
      
      setTimeout(() => {
        oldCard.remove();
      }, 400);
    }

    // Actualizar el tiempo de las notificaciones existentes
    currentNotifications.forEach((notification, index) => {
      if (index > 0) {
        const timeElement = notification.querySelector('.notification-time');
        if (timeElement) {
          const match = timeElement.textContent.match(/(\d+)/);
          if (match) {
            const currentTime = parseInt(match[1]);
            timeElement.textContent = `hace ${currentTime + 3}s`;
          }
        }
      }
    });

    notificationIndex++;
  }

  // Iniciar con tarjetas animadas estilo Magic UI
  function initializeNotifications() {
    // Crear las primeras tarjetas con delays escalonados
    for (let i = 0; i < 4; i++) {
      setTimeout(() => {
        const example = iaExamples[i];
        const card = createNotificationCard(example, i);
        currentNotifications.push(card);
        listContainer.appendChild(card);
      }, i * 150);
    }
  }

  // Inicializar cuando la sección sea visible
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting && currentNotifications.length === 0) {
        initializeNotifications();
        
        // Comenzar a añadir nuevas notificaciones después de 2 segundos
        setTimeout(() => {
          setInterval(addNotification, 3500); // Cada 3.5 segundos
        }, 2000);
      }
    });
  }, { threshold: 0.2 });

  const section = document.querySelector('.examples-ia-section');
  if (section) {
    observer.observe(section);
  }

  // Partículas de fondo
  const canvas = document.getElementById('examples-particles-canvas');
  if (canvas) {
    const ctx = canvas.getContext('2d');
    let particles = [];
    
    function resizeCanvas() {
      const section = canvas.closest('.examples-ia-section');
      canvas.width = section.offsetWidth;
      canvas.height = section.offsetHeight;
    }
    
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);
    
    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.vx = (Math.random() - 0.5) * 0.2;
        this.vy = (Math.random() - 0.5) * 0.2;
        this.size = Math.random() * 1.5 + 0.5;
        this.opacity = Math.random() * 0.3 + 0.1;
        this.color = Math.random() > 0.5 ? '#02aa6d' : '#251863';
      }
      
      update() {
        this.x += this.vx;
        this.y += this.vy;
        
        if (this.x < 0 || this.x > canvas.width) this.vx *= -1;
        if (this.y < 0 || this.y > canvas.height) this.vy *= -1;
        
        this.x = Math.max(0, Math.min(canvas.width, this.x));
        this.y = Math.max(0, Math.min(canvas.height, this.y));
      }
      
      draw() {
        ctx.save();
        ctx.globalAlpha = this.opacity;
        ctx.fillStyle = this.color;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
        ctx.restore();
      }
    }
    
    // Crear partículas
    for (let i = 0; i < 30; i++) {
      particles.push(new Particle());
    }
    
    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      particles.forEach(particle => {
        particle.update();
        particle.draw();
      });
      
      requestAnimationFrame(animate);
    }
    
    animate();
  }
});
</script>
