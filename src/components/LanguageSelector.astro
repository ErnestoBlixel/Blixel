---
import { languages, getLangFromUrl, getAlternateUrls } from '../i18n/config';
import { useTranslations } from '../i18n/utils';

interface Props {
  currentUrl: URL;
  className?: string;
}

const { currentUrl, className = '' } = Astro.props;
const currentLang = getLangFromUrl(currentUrl);
const { t } = useTranslations(currentLang);
const alternateUrls = getAlternateUrls(currentUrl.pathname, currentLang);
---

<div class="language-selector">
  {Object.entries(languages).map(([langCode, langInfo]) => {
    const url = alternateUrls[langCode];
    const isActive = langCode === currentLang;
    return (
      <a
        href={url}
        class={`flag ${isActive ? 'active' : ''}`}
        hreflang={langInfo.locale}
        aria-current={isActive ? 'page' : undefined}
      >
        {langInfo.flag}
      </a>
    );
  })}
</div>

<style>
.language-selector {
  display: flex;
  gap: 0.5rem;
  padding: 0.5rem;
}

.flag {
  font-size: 1.2rem;
  cursor: pointer;
  opacity: 0.7;
  transition: opacity 0.2s;
}

.flag:hover {
  opacity: 1;
}
</style>
