---
import Layout from '../layouts/Layout.astro';

// Datos por defecto en caso de error
let pageData = {
  title: "Blixel AI - Automatizaci√≥n Inteligente",
  content: "<p>Transformamos tu empresa con Inteligencia Artificial y automatizaci√≥n avanzada.</p>",
  status: "fallback"
};

// Solo intentar GraphQL si estamos en desarrollo o si la URL est√° configurada
const graphqlUrl = import.meta.env.PUBLIC_WP_GRAPHQL_URL;
const isDev = import.meta.env.DEV;

if (graphqlUrl && isDev) {
  try {
    console.log('üîç Probando conexi√≥n GraphQL:', graphqlUrl);
    
    const GQL = `
      query GetPages {
        pages(first: 10) {
          nodes {
            title
            content
            slug
            isFrontPage
          }
        }
      }
    `;

    const res = await fetch(graphqlUrl, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ query: GQL })
    });

    if (res.ok) {
      const result = await res.json();
      console.log('‚úÖ GraphQL Response:', result);
      
      // Si no hay errores y tenemos data
      if (!result.errors && result.data && result.data.pages) {
        const pages = result.data.pages.nodes;
        const home = pages.find(page => page.isFrontPage) || pages[0];
        
        if (home) {
          pageData = {
            ...home,
            status: "success"
          };
        }
      } else {
        console.warn('‚ö†Ô∏è GraphQL response tiene errores o est√° vac√≠a:', result.errors);
      }
    } else {
      console.warn(`‚ö†Ô∏è Error HTTP: ${res.status} al acceder a ${graphqlUrl}`);
    }
    
  } catch (error) {
    console.warn('‚ö†Ô∏è Error de conexi√≥n GraphQL (usando fallback):', error.message);
  }
} else {
  console.log('‚ÑπÔ∏è GraphQL deshabilitado para build de producci√≥n o URL no configurada');
}
---

<!-- 4) Ahora ya en el template puedes renderizar -->
<Layout>
  <h1>{pageData.title}</h1>
  <div innerHTML={pageData.content} />
  
  <!-- Info de debug -->
  <div style="margin-top: 2rem; padding: 1rem; background: #f5f5f5; border-radius: 8px; font-size: 0.9rem;">
    <h3>üîß Debug Info:</h3>
    <p><strong>Status:</strong> {pageData.status}</p>
    <p><strong>GraphQL URL:</strong> {graphqlUrl || 'No configurada'}</p>
    <p><strong>Environment:</strong> {isDev ? 'Development' : 'Production'}</p>
    <p><strong>Build Time:</strong> {new Date().toISOString()}</p>
  </div>
</Layout>
