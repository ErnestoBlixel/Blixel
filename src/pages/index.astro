---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import IntroSection from '../components/IntroSection.astro';
import ProblemIASection from '../components/ProblemIASection.astro';
import ServicesIASection from '../components/ServicesIASection.astro';
import MethodologyIASection from '../components/MethodologyIASection.astro';
import CasesIASection from '../components/CasesIASection.astro';
import FAQSection from '../components/FAQSection.astro';
import CTAIASection from '../components/CTAIASection.astro';

// Query para obtener tanto la página de inicio como el icono del sitio
const GQL = `
  query GetHomePageAndSiteIcon {
    page(id: "inicio", idType: URI) {
      title
      content
      databaseId
      seo {
        title
        metaDesc
        opengraphTitle
        opengraphDescription
      }
    }
    generalSettings {
      title
      description
      url
    }
    # Buscar el logo de BLIXEL
    mediaItems(where: {search: "BLIXEL"}, first: 5) {
      nodes {
        id
        title
        sourceUrl
        altText
        mediaDetails {
          width
          height
        }
      }
    }
  }
`;

// Fetch usando la variable de entorno
const graphqlUrl = import.meta.env.PUBLIC_WP_GRAPHQL_URL;

if (!graphqlUrl) {
  throw new Error('PUBLIC_WP_GRAPHQL_URL no está configurada');
}

const res = await fetch(graphqlUrl, {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ query: GQL })
});

if (!res.ok) throw new Error(`Error GraphQL: ${res.status}`);

const result = await res.json();

// Verificar si hay errores en la respuesta
if (result.errors) {
  console.error('❌ GraphQL Errors:', result.errors);
  throw new Error(`GraphQL Error: ${result.errors[0].message}`);
}

// Verificar si tenemos data
if (!result.data) {
  throw new Error('No data returned from GraphQL');
}

// Extraer datos
const home = result.data.page;
const siteSettings = result.data.generalSettings;
const mediaItems = result.data.mediaItems?.nodes || [];

// Buscar el logo de BLIXEL
let siteIcon = mediaItems.find(item => 
  item.title?.toLowerCase().includes('logo') && 
  item.title?.toLowerCase().includes('blixel')
) || mediaItems.find(item => 
  item.sourceUrl?.includes('logo') || 
  item.altText?.toLowerCase().includes('logo')
) || mediaItems[0];

// Si no encuentra nada, usar la URL que sabemos que existe
if (!siteIcon) {
  siteIcon = {
    sourceUrl: 'https://cms.blixel.es/wp-content/uploads/2025/05/cropped-Copia-de-BLIXEL-STUDIO_logo-500500.png',
    altText: 'BLIXEL logo',
    mediaDetails: { width: 512, height: 512 }
  };
}

// Datos del logo para pasar al Layout
const logoData = {
  url: siteIcon.sourceUrl,
  alt: siteIcon.altText || 'BLIXEL logo',
  width: siteIcon.mediaDetails?.width || 512,
  height: siteIcon.mediaDetails?.height || 512
};

// Extraer datos SEO para el metadata
const pageTitle = home?.seo?.title || home?.seo?.opengraphTitle || home?.title || siteSettings?.title || 'Inteligencia Artificial para Empresas | Blixel';
const pageDescription = home?.seo?.metaDesc || home?.seo?.opengraphDescription || siteSettings?.description || 'Implementamos soluciones de IA para empresas con ROI garantizado en 90 días. Automatización, agentes inteligentes y formación especializada.';
---

<Layout 
  logoUrl={logoData.url} 
  logoAlt={logoData.alt}
  title={pageTitle}
  description={pageDescription}
>
  <!-- Hero Section con datos de WordPress -->
  <Hero pageSlug="inicio" />

  <!-- Sección: Qué es la IA Empresarial -->
  <IntroSection />

  <!-- Sección del Problema -->
  <ProblemIASection />

  <!-- Sección de Servicios de IA -->
  <ServicesIASection />

  <!-- Sección de Metodología Quick-ROI -->
  <MethodologyIASection />

  <!-- Sección de Casos de Éxito -->
  <CasesIASection />

  <!-- Sección FAQ -->
  <FAQSection />

  <!-- Sección CTA Final -->
  <CTAIASection />
</Layout>

<style>
  /* Estilos globales para dark theme */
  :global(html) {
    scroll-behavior: smooth;
  }

  :global(body) {
    background: #0d0d0d;
    color: #e5e5e5;
  }

  /* Smooth scroll para enlaces internos */
  :global(a[href^="#"]) {
    scroll-behavior: smooth;
  }

  /* Estilos para mejorar la accesibilidad */
  :global(*:focus) {
    outline: 2px solid #60a5fa;
    outline-offset: 2px;
  }

  /* Optimización de fuentes */
  :global(body) {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
  }

  :global(h1, h2, h3, h4, h5, h6) {
    font-family: 'Inter Tight', 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Smooth scroll para enlaces internos
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });

  // Lazy loading para imágenes
  if ('IntersectionObserver' in window) {
    const imageObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const img = entry.target;
          img.src = img.dataset.src;
          img.classList.remove('lazy');
          imageObserver.unobserve(img);
        }
      });
    });

    document.querySelectorAll('img[data-src]').forEach(img => {
      imageObserver.observe(img);
    });
  }

  // Preload de la siguiente sección
  const sections = document.querySelectorAll('section');
  const sectionObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        // Precargar recursos de la siguiente sección
        const currentIndex = Array.from(sections).indexOf(entry.target);
        const nextSection = sections[currentIndex + 1];
        if (nextSection) {
          // Precargar imágenes de la siguiente sección
          const nextImages = nextSection.querySelectorAll('img');
          nextImages.forEach(img => {
            if (img.dataset.src) {
              const link = document.createElement('link');
              link.rel = 'preload';
              link.as = 'image';
              link.href = img.dataset.src;
              document.head.appendChild(link);
            }
          });
        }
      }
    });
  }, { threshold: 0.5 });

  sections.forEach(section => {
    sectionObserver.observe(section);
  });

  // Analytics tracking para CTAs
  document.querySelectorAll('[id*="cta"], [class*="cta"]').forEach(cta => {
    cta.addEventListener('click', function() {
      // Aquí puedes agregar tracking de analytics
      if (typeof gtag !== 'undefined') {
        gtag('event', 'cta_click', {
          'event_category': 'engagement',
          'event_label': this.textContent || 'CTA Click'
        });
      }
    });
  });

  // Performance monitoring
  if ('PerformanceObserver' in window) {
    const observer = new PerformanceObserver((list) => {
      for (const entry of list.getEntries()) {
        if (entry.entryType === 'largest-contentful-paint') {
          console.log('LCP:', entry.startTime);
        }
      }
    });
    observer.observe({ entryTypes: ['largest-contentful-paint'] });
  }
});
</script>
